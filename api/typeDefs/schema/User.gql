type Query {
	users(query: String): [User!]!
	me: User!
}

type Mutation {
	createUser(data: CreateUserInput!): CreateUserResponde!
	loginUser(data: LoginUserInput!): AuthPayload!
	deleteUser(_id: ID!): User!
	updateUser(data: UpdateUserInput!): UpdateUserResponde!
}

input CreateUserInput {
	fullName: String!
	email: String!
	password: String!
}

type CreateUserResponde {
	message: String
	_id: ID
}

input LoginUserInput {
	email: String!
	password: String!
}

type AuthPayload {
	token: String!
	user: User!
}

input UpdateUserInput {
	fullName: String
	password: String
}

type UpdateUserResponde {
	message: String
}

type User {
	_id: ID!
	fullName: String!
	email: String!
	articles: [Article!]
}